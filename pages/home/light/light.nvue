<template>
	<scrollpage>

			<layout title="最近使用" v-if="recentUse.length">
				<view class="y-center a-lmt">
					<view v-for="(innerItem) in recentUse" :key="innerItem.title"class="icon" @click="jump(innerItem)">
						<image class="img" :src="'http://windrunner_max.gitee.io/imgpath/SHST/Light/'+innerItem.img"></image>
						<text class="text" style="margin-top: 6px;">{{innerItem.title}}</text>
					</view>
				</view>
			</layout>

			<layout title="应用列表">
				<view v-for="(item,index) in lightList" :key="index">
					<view class="y-center a-lmt">
						<view v-for="(innerItem,innderIndex) in item" :key="innderIndex" class="icon fill" @click="jump(innerItem)">
							<image class="img" v-if="innerItem.img"
                                :src="'http://windrunner_max.gitee.io/imgpath/SHST/Light/'+innerItem.img"></image>
							<text class="text" v-if="innerItem.title">{{innerItem.title}}</text>
						</view>
					</view>
				</view>
			</layout>

	</scrollpage>
</template>

<script>
	import layout from "@/components/layout.nvue"
	import scrollpage from "@/components/scrollpage.nvue"
	export default {
		components: {
			layout,
			scrollpage
		},
		data: function() {
			return {
				lightList: [],
				recentUse: []
			}
		},
		created:async function() {
			var res = await uni.$app.request({
				load: 1,
				url: "http://windrunner_max.gitee.io/imgpath/SHST/Light/config.json",
            })
            var extList = [];
            var innerList = [];
            res.data.map(function(value, index) {
                if (index && index % 4 === 0) {
                    extList.push(innerList);
                    innerList = [];
                }
                innerList.push(value);
                return value;
            });
            var n = 4 - innerList.length;
            for(var i = 0; i < n; i++) innerList.push({});
            extList.push(innerList);
            this.lightList = extList;
			uni.getStorage({
				key: "recent",
				success: (res) => {
					this.recentUse = res.data
				}
			})
		},
		methods: {
			jump: function(obj) {
				uni.navigateTo({
					url: "/pages/home/auxiliary/webview?url=" + encodeURIComponent(obj.url)
				})
				var curUse = this.recentUse;
				if (JSON.stringify(curUse).indexOf(JSON.stringify(obj)) == -1) {
					curUse.unshift(obj);
					this.recentUse = curUse.splice(0, 4);
					uni.setStorage({
						key: "recent",
						data: this.recentUse
					})
				}
			}
		}
	}
</script>

<style>
	.icon {
		flex-direction: column;
		justify-content: center;
		align-items: center;
		padding: 5px 0;
	}

	.img {
		width: 35px;
		height: 35px;
		border-radius: 30px;
		justify-content: center;
		flex-direction: row;
		align-items: center;
		margin-bottom: 10px;
	}

	.name {
		margin-top: 6px;
	}

	.y-center {
		justify-content: space-around;
	}
</style>
